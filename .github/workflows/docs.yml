name: Deploy documentation
on: 
  push:
    branches: [main]
  workflow_dispatch:
# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v2
        # This is specifically configured to use the latest stable version of Python
        # Assuming we support it
      - name: Setup Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: 3.10
      # mkdocs' gh-deploy command uses the 'legacy' method of deploying custom sites to Pages
      # which is placing the built files on a gh-pages branch with a .nojekyll.
      # (source: https://github.com/mkdocs/mkdocs/blob/master/mkdocs/commands/gh_deploy.py#L127)
      # Since then, GitHub has released a way to deploy to Pages directly from Actions.
      # Which makes our life a lot easier.
      - name: Install dependencies and build
        run: |
          python -m venv .
          pip install mkdocs mkdocstrings[python] mkdocs-material
          mkdocs build -d site
      - name: Upload built site
        uses: actions/upload-pages-artifact@v1
        with:
          path: site/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
