name: Lint VanillaInstaller

on: [push, pull_request]

permissions:
  contents: read

jobs:
  lint:
    name: Lint with flake8
    if: ${{ github.event_name != 'pull_request' || github.repository != github.event.pull_request.head.repo.full_name }}
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-22.04", "macos-12", "windows-2022"]
    steps:
    - uses: actions/checkout@v3
    # Linting is done with one version of python
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    - name: Install and configure Poetry
      uses: snok/install-poetry@v1
      with:
        virtualenvs-in-project: true
        installer-parallel: true
    - name: Load cached venv
      id: cached-poetry-dependencies
      # https://github.com/snok/install-poetry#caching-on-windows-runners
      if: ${{ runner.os != "Windows" }}
      uses: actions/cache@v3
      with:
        path: .venv
        key: ci-lint-venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --no-root --only ci
    - name: Lint with flake8
      run: |
        source $VENV
        # stop the build if there are Python syntax errors or undefined names
        flake8 ./vanilla_installer/ --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 ./vanilla_installer/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics --ignore=E501,E722,E266
